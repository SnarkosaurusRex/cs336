LAB 13

---- Exercise 13.1 ----

a.) What benefit did using the React Router bring to the application?
	React Router allows single-page applications (SPAs) to have multiple pages, which will allow us to add the "Edit Comment" page. It also allows us to have a catch-all route handler.


b.) Which is better, hash history or browser history?
	Hash history is simpler because it doesn't require any server-side configuration, but it's really a hack and makes your URLs yucky, so browser history is better.


c.) Why does the server (either Webpack Dev Server or the Express server) have to be modified to support the browser history? Compare this with the hash-based server demonstrated in class, which didn't require such modifications.
	The server needs to know how to handle whatever URL it gets (otherwise it sorta barfs on itself and doesn't work when you refresh somewhere other than the Home page), and it needs to still be able to find the necessary files if it starts at a deep path.


---- Exercise 13.2 ----

a.) What state does the new CommentEdit component maintain and how does that compare with the state maintained by the CommentBox component?
	The CommentEdit component maintains the author and text state of one comment. The CommentBox component maintains the author and text state of all of the comments.



b.) What does the CommentEdit component do when the AJAX PUT or DELETE methods return successfully? How does this compare with what the “Cancel” button provided by the CommentEdit component does?
	It uses react router to navigate back to the '/' route, which is re-rendered to show the latest changes to the CommentList.


c.) How is the Link added in the last step different from a simple HTML hyperlink?
	It is a link to a specific component.


---- Exercise 13.3 ----

Heroku deployment URL: 
